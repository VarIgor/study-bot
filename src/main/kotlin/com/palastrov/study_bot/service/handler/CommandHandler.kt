package com.palastrov.study_bot.service.handler

import com.palastrov.study_bot.service.data.BotConstants.Command
import com.palastrov.study_bot.service.manager.FeedbackManager
import com.palastrov.study_bot.service.manager.HelpManager
import com.palastrov.study_bot.service.manager.StartManager
import com.palastrov.study_bot.telegram.TelegramWebhookBot
import org.springframework.stereotype.Service
import org.telegram.telegrambots.meta.api.methods.BotApiMethod
import org.telegram.telegrambots.meta.api.methods.send.SendMessage
import org.telegram.telegrambots.meta.api.objects.Message

@Service
class CommandHandler(
     private val feedbackManager: FeedbackManager,
     private val helpManager: HelpManager,
     private val startManager: StartManager
) {
    fun answer(message: Message, bot: TelegramWebhookBot): BotApiMethod<*>? {
        return when (message.text) {
            Command.FEEDBACK -> feedbackManager.handleCommand(message)
            Command.HELP -> helpManager.handleCommand(message)
            Command.START -> startManager.handleCommand(message)
            else -> defaultAnswer(message)
        }

    }

    private fun defaultAnswer(message: Message): BotApiMethod<*>? {
        return SendMessage.builder()
            .chatId(message.chatId)
            .text(
                """
                ‚ùì *–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É*
            
            –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:
            /start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
            /help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º  
            /feedback - –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            
            –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.
            
            ü§ñ *Tutor-Bot*
            """.trimIndent()
            )
            .parseMode("Markdown")
            .build()
    }
}
//todo Move the message creation function to the object MessageUtils
//todo Add an inline keyboard for the start command